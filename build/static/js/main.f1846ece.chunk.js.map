{"version":3,"sources":["components/Filter.js","components/Notification.js","components/PersonForm.js","components/Person.js","services/persons.js","App.js","index.js"],"names":["Filter","props","value","filter","onChange","handleFilterChange","Notification","message","undefined","type","className","text","console","log","PersonForm","onSubmit","addName","newName","handleNameChange","newNumber","handleNumberChange","Persons","person","deletePerson","style","margin","name","number","onClick","baseUrl","axios","get","then","response","data","newPerson","post","id","newObject","put","delete","App","useState","persons","setPersons","setNewName","setNewNumber","setFilter","setMessage","useEffect","personService","initialPersons","personsToShow","trim","toLowerCase","indexOf","event","target","preventDefault","findIndex","contact","window","confirm","changedContact","returnedContact","map","setTimeout","catch","error","p","changeNumber","find","personObject","returnedPerson","concat","i","Person","key","personRemoved","deleteContact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1846ece.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n  return (\r\n    <div>\r\n      {\"filter shown with \"}\r\n      <input value={props.filter} onChange={props.handleFilterChange} />\r\n    </div> \r\n  )\r\n}\r\n  \r\nexport default Filter","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message.type === undefined) {\r\n    return null\r\n  }\r\n  else if (message.type === 'notificationMessage') {\r\n    return (\r\n      <div className=\"notification\">\r\n        {message.text}\r\n      </div>\r\n    )\r\n  }\r\n  else {\r\n    console.log('Error happened')\r\n    return (\r\n      <div className=\"error\">\r\n        {message.text}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.addName}>\r\n      <div>{\"name: \"}\r\n        <input value={props.newName} onChange={props.handleNameChange} />\r\n      </div>\r\n      <div>{\"number: \"}\r\n        <input value={props.newNumber} onChange={props.handleNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Persons = ({ person, deletePerson }) => {\r\n  return (\r\n    <p style={{margin: 1}}>\r\n      {`${person.name} ${person.number} `}\r\n      <button onClick={deletePerson}>delete</button>\r\n    </p>\r\n  )\r\n}\r\n\r\nexport default Persons","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newPerson => {\r\n  const request = axios.post(baseUrl, newPerson)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport PersonForm from './components/PersonForm'\nimport Person from './components/Person'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ message, setMessage ] = useState({})\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const deleteContact = (person) => {\n    if (window.confirm(`Delete ${person.name}?`)){\n      personService\n        .remove(person.id)\n        .then(() => {\n          const personRemoved = persons\n                                  .filter(contact => \n                                    contact.id !== person.id)\n          setPersons(personRemoved)\n          const message = {\n            text: `Removed ${person.name}`,\n            type: \"notificationMessage\"\n          }\n          console.log(message)\n          setMessage(message)\n          setTimeout(() => {\n            setMessage({})\n          }, 5000)\n      })\n    }\n  }\n\n  const changeNumber = (contact) => {\n    const message = `${contact.name} is already added to the phonebook, replace the old number with a new one?`\n\n    if (window.confirm(message)){\n      const changedContact = {...contact, number: newNumber.trim()}\n\n      personService\n        .update(contact.id, changedContact)\n        .then(returnedContact => {\n          setPersons(persons.map(person => person.id !== contact.id\n                                                     ? person\n                                                     : returnedContact))\n          const message = {\n            text: `Number for ${contact.name} was changed`,\n            type: \"notificationMessage\"\n          }\n          setMessage(message)\n          setTimeout(() => {\n            setMessage({})\n          }, 5000)\n        })\n        .catch(error => {\n          const message = {\n            text: `Information of ${contact.name} has already been removed from server`,\n            type: \"errorMessage\"\n          }\n          setMessage(message)\n          setTimeout(() => {\n            setMessage({})\n          }, 5000)\n          setPersons(persons.filter(p => p.id !== contact.id))\n        })\n      setNewName('')\n      setNewNumber('')\n    }\n  }\n\n  const addName = (event) => {\n    event.preventDefault()\n    const name = newName.trim()\n    \n    if ( name === \"\") {\n      setNewName('')\n    }\n    else if (persons.findIndex(person => person.name === name) > -1) {\n      changeNumber(persons.find(person => person.name === name))\n    }\n    else {\n      const personObject = {\n        name,\n        number: newNumber.trim()\n      }\n\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          const message = {\n            text: `Added ${personObject.name}`,\n            type: \"notificationMessage\"\n          }\n          setMessage(message)\n          setTimeout(() => {\n            setMessage({})\n          }, 5000)\n        })\n    } \n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const personsToShow = (filter.trim() === \"\")\n    ? persons\n    : persons.filter(person => person.name\n                               .toLowerCase()\n                               .indexOf(filter\n                               .trim()\n                               .toLowerCase()) !== -1)\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter filter={filter} handleFilterChange={handleFilterChange} /> \n      <h2>Add a new contact</h2>\n      <PersonForm\n        addName={addName}\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Contacts</h2>\n      <div>\n        {personsToShow.map((person, i) => \n          <Person \n            key={i}\n            person={person}\n            deletePerson={() => deleteContact(person)}\n          />\n        )}\n      </div>\n    </div>\n  )\n\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}